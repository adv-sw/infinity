# HG changeset patch
# User stevew <steve@advance-software.com>
# Date 1643047740 0
#      Mon Jan 24 18:09:00 2022 +0000
# Node ID a5e8a9d4c57d096d3003001c628e59886e4aa241
# Parent  9b4508502e4d795ebf1b498443935687c1fd2ad9
fixes youtube full screen without regressing standard videocontrols.

diff --git a/browser/actors/DOMFullscreenParent.jsm b/browser/actors/DOMFullscreenParent.jsm
--- a/browser/actors/DOMFullscreenParent.jsm
+++ b/browser/actors/DOMFullscreenParent.jsm
@@ -97,7 +97,8 @@
       case "DOMFullscreen:Painted": {
         Services.obs.notifyObservers(window, "fullscreen-painted");
         this.sendAsyncMessage("DOMFullscreen:Painted", {});
-        TelemetryStopwatch.finish("FULLSCREEN_CHANGE_MS");
+	    // INF_PATCH: Doesn't resolve properly, Gecko_Embed path, so disable for now.
+        //TelemetryStopwatch.finish("FULLSCREEN_CHANGE_MS");
         break;
       }
     }
@@ -127,13 +128,17 @@
           window.gXPInstallObserver.removeAllNotifications(browser);
         }
 
-        TelemetryStopwatch.start("FULLSCREEN_CHANGE_MS");
+		// INF_PATCH: Doesn't resolve properly, Gecko_Embed path, so disable for now.
+        //TelemetryStopwatch.start("FULLSCREEN_CHANGE_MS");
+		
         window.FullScreen.enterDomFullscreen(browser, this);
         this.updateFullscreenWindowReference(window);
         break;
       }
       case "MozDOMFullscreen:Exited": {
-        TelemetryStopwatch.start("FULLSCREEN_CHANGE_MS");
+
+		// INF_PATCH: Doesn't resolve properly, Gecko_Embed path, so disable for now.
+        //TelemetryStopwatch.start("FULLSCREEN_CHANGE_MS");
 
         // Make sure that the actor has not been destroyed before
         // accessing its browsing context. Otherwise, a error may
diff --git a/dom/base/Document.cpp b/dom/base/Document.cpp
--- a/dom/base/Document.cpp
+++ b/dom/base/Document.cpp
@@ -14823,21 +14823,12 @@
     DispatchFullscreenNewOriginEvent(this);
   }
 
-#ifdef INF_PATCH
-
-  // Performing here fixes youtube full screen but breaks simple video element videocontrols.
-
-  if (!Gecko_Embed()) {
-
-     // Dispatch "fullscreenchange" events. Note that the loop order is
-     // reversed so that events are dispatched in the tree order as
-     // indicated in the spec.
-     for (Document* d : Reversed(changed)) {
-       DispatchFullscreenChange(*d, d->GetUnretargetedFullScreenElement());
-     }
-
-  }
-#endif // INF_PATCH
+  // Dispatch "fullscreenchange" events. Note that the loop order is
+  // reversed so that events are dispatched in the tree order as
+  // indicated in the spec.
+  for (Document* d : Reversed(changed)) {
+      DispatchFullscreenChange(*d, d->GetUnretargetedFullScreenElement());
+  }
 
   aRequest->MayResolvePromise();
   return true;
